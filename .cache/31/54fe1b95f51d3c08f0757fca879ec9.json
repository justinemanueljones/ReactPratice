{"id":"components/Counter.js","dependencies":[{"name":"/Users/emanueljones/Documents/lambdaschool/React/Modules/package.json","includedInParent":true,"mtime":1599419650023},{"name":"react","loc":{"line":1,"column":30},"parent":"/Users/emanueljones/Documents/lambdaschool/React/Modules/src/components/Counter.js","resolved":"/Users/emanueljones/Documents/lambdaschool/React/Modules/node_modules/react/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Counter;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* STEP 0 */\nfunction Counter() {\n  // STEP 1:\n  // Using the state hook, create a 'count', 'setCount' pair.\n  // The 'count' state should be initialized to the number zero.step 2 line 51 return\n  var _useState = (0, _react.useState)(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1]; //set state\n\n\n  var increment = function increment() {\n    //step 4 set count to +1\n    setCount(count + 1);\n  };\n\n  var decrement = function decrement() {\n    /* STEP 5 This click handler needs to use 'setCount' to set the 'count' to be the current 'count' minus one.\n    Do NOT do count--. That amounts to trying to mutate 'count' in place. This is the road to perdition.*/\n    setCount(count - 1);\n  };\n\n  var reset = function reset() {\n    /* STEP 6 This click handler needs to use 'setCount' to set the 'count' to be zero again.*/\n    setCount(0);\n  };\n\n  var style = {\n    fontSize: '1.5em',\n    marginBottom: '0.3em',\n    color: count % 2 === 0 ? 'royalblue' : 'crimson' //The 'style' object has the 'color' property hard-coded to \"royalblue\".\n    // What the value of 'color' should be instead is a ternary expression that goes like this:\n    // If count is even, then \"royalblue\", else \"crimson\".\n\n  };\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"widget-counter container\"\n  }, /*#__PURE__*/_react.default.createElement(\"h2\", null, \"Counter\"), /*#__PURE__*/_react.default.createElement(\"div\", {\n    style: style\n  }, \"Number \", count, \" is even\"), \" \", /*#__PURE__*/_react.default.createElement(\"div\", null, /*#__PURE__*/_react.default.createElement(\"button\", {\n    onClick: increment\n  }, \"Increment\"), /*#__PURE__*/_react.default.createElement(\"button\", {\n    onClick: decrement\n  }, \"Decrement\"), /*#__PURE__*/_react.default.createElement(\"button\", {\n    onClick: reset\n  }, \"Reset\")));\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"components/Counter.js","original":{"line":1,"column":0}},{"generated":{"line":26,"column":0},"source":"components/Counter.js","original":{"line":1,"column":39}},{"generated":{"line":27,"column":0},"source":"components/Counter.js","original":{"line":3,"column":15}},{"name":"Counter","generated":{"line":27,"column":9},"source":"components/Counter.js","original":{"line":3,"column":24}},{"generated":{"line":27,"column":16},"source":"components/Counter.js","original":{"line":3,"column":15}},{"generated":{"line":27,"column":19},"source":"components/Counter.js","original":{"line":3,"column":34}},{"generated":{"line":28,"column":0},"source":"components/Counter.js","original":{"line":4,"column":2}},{"generated":{"line":29,"column":0},"source":"components/Counter.js","original":{"line":5,"column":2}},{"generated":{"line":30,"column":0},"source":"components/Counter.js","original":{"line":6,"column":2}},{"generated":{"line":31,"column":0},"source":"components/Counter.js","original":{"line":3,"column":34}},{"generated":{"line":31,"column":18},"source":"components/Counter.js","original":{"line":7,"column":26}},{"generated":{"line":31,"column":39},"source":"components/Counter.js","original":{"line":7,"column":35}},{"generated":{"line":31,"column":40},"source":"components/Counter.js","original":{"line":7,"column":26}},{"generated":{"line":31,"column":41},"source":"components/Counter.js","original":{"line":3,"column":34}},{"generated":{"line":32,"column":0},"source":"components/Counter.js","original":{"line":3,"column":34}},{"generated":{"line":33,"column":0},"source":"components/Counter.js","original":{"line":3,"column":34}},{"name":"count","generated":{"line":33,"column":6},"source":"components/Counter.js","original":{"line":7,"column":7}},{"generated":{"line":33,"column":11},"source":"components/Counter.js","original":{"line":3,"column":34}},{"generated":{"line":34,"column":0},"source":"components/Counter.js","original":{"line":3,"column":34}},{"name":"setCount","generated":{"line":34,"column":6},"source":"components/Counter.js","original":{"line":7,"column":14}},{"generated":{"line":34,"column":14},"source":"components/Counter.js","original":{"line":3,"column":34}},{"generated":{"line":34,"column":32},"source":"components/Counter.js","original":{"line":7,"column":39}},{"generated":{"line":37,"column":0},"source":"components/Counter.js","original":{"line":9,"column":2}},{"name":"increment","generated":{"line":37,"column":6},"source":"components/Counter.js","original":{"line":9,"column":8}},{"generated":{"line":37,"column":15},"source":"components/Counter.js","original":{"line":9,"column":17}},{"generated":{"line":37,"column":18},"source":"components/Counter.js","original":{"line":9,"column":20}},{"name":"increment","generated":{"line":37,"column":27},"source":"components/Counter.js","original":{"line":9,"column":8}},{"generated":{"line":37,"column":36},"source":"components/Counter.js","original":{"line":9,"column":20}},{"generated":{"line":37,"column":39},"source":"components/Counter.js","original":{"line":9,"column":26}},{"generated":{"line":38,"column":0},"source":"components/Counter.js","original":{"line":9,"column":29}},{"name":"setCount","generated":{"line":39,"column":0},"source":"components/Counter.js","original":{"line":10,"column":4}},{"name":"setCount","generated":{"line":39,"column":4},"source":"components/Counter.js","original":{"line":10,"column":4}},{"generated":{"line":39,"column":12},"source":"components/Counter.js","original":{"line":10,"column":12}},{"name":"count","generated":{"line":39,"column":13},"source":"components/Counter.js","original":{"line":10,"column":13}},{"generated":{"line":39,"column":18},"source":"components/Counter.js","original":{"line":10,"column":18}},{"generated":{"line":39,"column":21},"source":"components/Counter.js","original":{"line":10,"column":21}},{"generated":{"line":39,"column":22},"source":"components/Counter.js","original":{"line":10,"column":12}},{"generated":{"line":39,"column":23},"source":"components/Counter.js","original":{"line":10,"column":4}},{"generated":{"line":40,"column":0},"source":"components/Counter.js","original":{"line":11,"column":3}},{"generated":{"line":40,"column":3},"source":"components/Counter.js","original":{"line":9,"column":2}},{"generated":{"line":42,"column":0},"source":"components/Counter.js","original":{"line":12,"column":2}},{"name":"decrement","generated":{"line":42,"column":6},"source":"components/Counter.js","original":{"line":12,"column":8}},{"generated":{"line":42,"column":15},"source":"components/Counter.js","original":{"line":12,"column":17}},{"generated":{"line":42,"column":18},"source":"components/Counter.js","original":{"line":12,"column":20}},{"name":"decrement","generated":{"line":42,"column":27},"source":"components/Counter.js","original":{"line":12,"column":8}},{"generated":{"line":42,"column":36},"source":"components/Counter.js","original":{"line":12,"column":20}},{"generated":{"line":42,"column":39},"source":"components/Counter.js","original":{"line":12,"column":26}},{"generated":{"line":43,"column":0},"source":"components/Counter.js","original":{"line":13,"column":4}},{"name":"setCount","generated":{"line":45,"column":0},"source":"components/Counter.js","original":{"line":15,"column":4}},{"name":"setCount","generated":{"line":45,"column":4},"source":"components/Counter.js","original":{"line":15,"column":4}},{"generated":{"line":45,"column":12},"source":"components/Counter.js","original":{"line":15,"column":12}},{"name":"count","generated":{"line":45,"column":13},"source":"components/Counter.js","original":{"line":15,"column":13}},{"generated":{"line":45,"column":18},"source":"components/Counter.js","original":{"line":15,"column":18}},{"generated":{"line":45,"column":21},"source":"components/Counter.js","original":{"line":15,"column":21}},{"generated":{"line":45,"column":22},"source":"components/Counter.js","original":{"line":15,"column":12}},{"generated":{"line":45,"column":23},"source":"components/Counter.js","original":{"line":15,"column":4}},{"generated":{"line":46,"column":0},"source":"components/Counter.js","original":{"line":16,"column":3}},{"generated":{"line":46,"column":3},"source":"components/Counter.js","original":{"line":12,"column":2}},{"generated":{"line":48,"column":0},"source":"components/Counter.js","original":{"line":17,"column":2}},{"name":"reset","generated":{"line":48,"column":6},"source":"components/Counter.js","original":{"line":17,"column":8}},{"generated":{"line":48,"column":11},"source":"components/Counter.js","original":{"line":17,"column":13}},{"generated":{"line":48,"column":14},"source":"components/Counter.js","original":{"line":17,"column":16}},{"name":"reset","generated":{"line":48,"column":23},"source":"components/Counter.js","original":{"line":17,"column":8}},{"generated":{"line":48,"column":28},"source":"components/Counter.js","original":{"line":17,"column":16}},{"generated":{"line":48,"column":31},"source":"components/Counter.js","original":{"line":17,"column":22}},{"generated":{"line":49,"column":0},"source":"components/Counter.js","original":{"line":18,"column":4}},{"name":"setCount","generated":{"line":50,"column":0},"source":"components/Counter.js","original":{"line":19,"column":4}},{"name":"setCount","generated":{"line":50,"column":4},"source":"components/Counter.js","original":{"line":19,"column":4}},{"generated":{"line":50,"column":12},"source":"components/Counter.js","original":{"line":19,"column":12}},{"generated":{"line":50,"column":13},"source":"components/Counter.js","original":{"line":19,"column":13}},{"generated":{"line":50,"column":14},"source":"components/Counter.js","original":{"line":19,"column":12}},{"generated":{"line":50,"column":15},"source":"components/Counter.js","original":{"line":19,"column":4}},{"generated":{"line":51,"column":0},"source":"components/Counter.js","original":{"line":20,"column":3}},{"generated":{"line":51,"column":3},"source":"components/Counter.js","original":{"line":17,"column":2}},{"generated":{"line":53,"column":0},"source":"components/Counter.js","original":{"line":21,"column":2}},{"name":"style","generated":{"line":53,"column":6},"source":"components/Counter.js","original":{"line":21,"column":8}},{"generated":{"line":53,"column":11},"source":"components/Counter.js","original":{"line":21,"column":13}},{"generated":{"line":53,"column":14},"source":"components/Counter.js","original":{"line":21,"column":16}},{"name":"fontSize","generated":{"line":54,"column":0},"source":"components/Counter.js","original":{"line":22,"column":4}},{"name":"fontSize","generated":{"line":54,"column":4},"source":"components/Counter.js","original":{"line":22,"column":4}},{"generated":{"line":54,"column":12},"source":"components/Counter.js","original":{"line":22,"column":12}},{"generated":{"line":54,"column":14},"source":"components/Counter.js","original":{"line":22,"column":14}},{"generated":{"line":54,"column":21},"source":"components/Counter.js","original":{"line":21,"column":16}},{"name":"marginBottom","generated":{"line":55,"column":0},"source":"components/Counter.js","original":{"line":23,"column":4}},{"name":"marginBottom","generated":{"line":55,"column":4},"source":"components/Counter.js","original":{"line":23,"column":4}},{"generated":{"line":55,"column":16},"source":"components/Counter.js","original":{"line":23,"column":16}},{"generated":{"line":55,"column":18},"source":"components/Counter.js","original":{"line":23,"column":18}},{"generated":{"line":55,"column":25},"source":"components/Counter.js","original":{"line":21,"column":16}},{"name":"color","generated":{"line":56,"column":0},"source":"components/Counter.js","original":{"line":24,"column":4}},{"name":"color","generated":{"line":56,"column":4},"source":"components/Counter.js","original":{"line":24,"column":4}},{"generated":{"line":56,"column":9},"source":"components/Counter.js","original":{"line":24,"column":9}},{"name":"count","generated":{"line":56,"column":11},"source":"components/Counter.js","original":{"line":24,"column":11}},{"generated":{"line":56,"column":16},"source":"components/Counter.js","original":{"line":24,"column":16}},{"generated":{"line":56,"column":19},"source":"components/Counter.js","original":{"line":24,"column":19}},{"generated":{"line":56,"column":20},"source":"components/Counter.js","original":{"line":24,"column":11}},{"generated":{"line":56,"column":25},"source":"components/Counter.js","original":{"line":24,"column":25}},{"generated":{"line":56,"column":26},"source":"components/Counter.js","original":{"line":24,"column":11}},{"generated":{"line":56,"column":29},"source":"components/Counter.js","original":{"line":24,"column":29}},{"generated":{"line":56,"column":40},"source":"components/Counter.js","original":{"line":24,"column":11}},{"generated":{"line":56,"column":43},"source":"components/Counter.js","original":{"line":24,"column":43}},{"generated":{"line":56,"column":52},"source":"components/Counter.js","original":{"line":21,"column":16}},{"generated":{"line":56,"column":53},"source":"components/Counter.js","original":{"line":24,"column":55}},{"generated":{"line":57,"column":0},"source":"components/Counter.js","original":{"line":25,"column":4}},{"generated":{"line":58,"column":0},"source":"components/Counter.js","original":{"line":26,"column":4}},{"generated":{"line":60,"column":0},"source":"components/Counter.js","original":{"line":21,"column":16}},{"generated":{"line":60,"column":3},"source":"components/Counter.js","original":{"line":21,"column":2}},{"generated":{"line":61,"column":0},"source":"components/Counter.js","original":{"line":28,"column":2}},{"generated":{"line":61,"column":22},"source":"components/Counter.js","original":{"line":29,"column":4}},{"generated":{"line":62,"column":0},"source":"components/Counter.js","original":{"line":29,"column":9}},{"generated":{"line":62,"column":4},"source":"components/Counter.js","original":{"line":29,"column":9}},{"generated":{"line":62,"column":13},"source":"components/Counter.js","original":{"line":29,"column":18}},{"generated":{"line":62,"column":15},"source":"components/Counter.js","original":{"line":29,"column":19}},{"generated":{"line":63,"column":0},"source":"components/Counter.js","original":{"line":29,"column":4}},{"generated":{"line":63,"column":18},"source":"components/Counter.js","original":{"line":30,"column":6}},{"generated":{"line":63,"column":69},"source":"components/Counter.js","original":{"line":29,"column":4}},{"generated":{"line":63,"column":84},"source":"components/Counter.js","original":{"line":31,"column":6}},{"generated":{"line":64,"column":0},"source":"components/Counter.js","original":{"line":31,"column":11}},{"generated":{"line":64,"column":4},"source":"components/Counter.js","original":{"line":31,"column":11}},{"generated":{"line":64,"column":9},"source":"components/Counter.js","original":{"line":31,"column":16}},{"name":"style","generated":{"line":64,"column":11},"source":"components/Counter.js","original":{"line":31,"column":18}},{"generated":{"line":65,"column":0},"source":"components/Counter.js","original":{"line":31,"column":6}},{"name":"count","generated":{"line":65,"column":16},"source":"components/Counter.js","original":{"line":31,"column":33}},{"generated":{"line":65,"column":21},"source":"components/Counter.js","original":{"line":31,"column":6}},{"generated":{"line":65,"column":34},"source":"components/Counter.js","original":{"line":29,"column":4}},{"generated":{"line":65,"column":54},"source":"components/Counter.js","original":{"line":34,"column":6}},{"generated":{"line":65,"column":109},"source":"components/Counter.js","original":{"line":35,"column":8}},{"generated":{"line":66,"column":0},"source":"components/Counter.js","original":{"line":35,"column":16}},{"generated":{"line":66,"column":4},"source":"components/Counter.js","original":{"line":35,"column":16}},{"generated":{"line":66,"column":11},"source":"components/Counter.js","original":{"line":35,"column":23}},{"name":"increment","generated":{"line":66,"column":13},"source":"components/Counter.js","original":{"line":35,"column":25}},{"generated":{"line":67,"column":0},"source":"components/Counter.js","original":{"line":35,"column":8}},{"generated":{"line":67,"column":17},"source":"components/Counter.js","original":{"line":34,"column":6}},{"generated":{"line":67,"column":32},"source":"components/Counter.js","original":{"line":36,"column":8}},{"generated":{"line":68,"column":0},"source":"components/Counter.js","original":{"line":36,"column":16}},{"generated":{"line":68,"column":4},"source":"components/Counter.js","original":{"line":36,"column":16}},{"generated":{"line":68,"column":11},"source":"components/Counter.js","original":{"line":36,"column":23}},{"name":"decrement","generated":{"line":68,"column":13},"source":"components/Counter.js","original":{"line":36,"column":25}},{"generated":{"line":69,"column":0},"source":"components/Counter.js","original":{"line":36,"column":8}},{"generated":{"line":69,"column":17},"source":"components/Counter.js","original":{"line":34,"column":6}},{"generated":{"line":69,"column":32},"source":"components/Counter.js","original":{"line":37,"column":8}},{"generated":{"line":70,"column":0},"source":"components/Counter.js","original":{"line":37,"column":16}},{"generated":{"line":70,"column":4},"source":"components/Counter.js","original":{"line":37,"column":16}},{"generated":{"line":70,"column":11},"source":"components/Counter.js","original":{"line":37,"column":23}},{"name":"reset","generated":{"line":70,"column":13},"source":"components/Counter.js","original":{"line":37,"column":25}},{"generated":{"line":71,"column":0},"source":"components/Counter.js","original":{"line":37,"column":8}},{"generated":{"line":71,"column":13},"source":"components/Counter.js","original":{"line":34,"column":6}},{"generated":{"line":71,"column":14},"source":"components/Counter.js","original":{"line":29,"column":4}},{"generated":{"line":71,"column":15},"source":"components/Counter.js","original":{"line":28,"column":2}},{"generated":{"line":72,"column":0},"source":"components/Counter.js","original":{"line":41,"column":1}}],"sources":{"components/Counter.js":"import React, {useState} from 'react'; /* STEP 0 */\n\nexport default function Counter() {\n  // STEP 1:\n  // Using the state hook, create a 'count', 'setCount' pair.\n  // The 'count' state should be initialized to the number zero.step 2 line 51 return\n  let [count, setCount] = useState(0); //set state\n\n  const increment = () => {  //step 4 set count to +1\n    setCount(count + 1);\n  };\n  const decrement = () => {\n    /* STEP 5 This click handler needs to use 'setCount' to set the 'count' to be the current 'count' minus one.\n  Do NOT do count--. That amounts to trying to mutate 'count' in place. This is the road to perdition.*/\n    setCount(count - 1);\n  };\n  const reset = () => {\n    /* STEP 6 This click handler needs to use 'setCount' to set the 'count' to be zero again.*/\n    setCount(0);\n  };\n  const style = {\n    fontSize: '1.5em',\n    marginBottom: '0.3em',\n    color: count % 2 === 0 ? 'royalblue' : 'crimson',  //The 'style' object has the 'color' property hard-coded to \"royalblue\".\n    // What the value of 'color' should be instead is a ternary expression that goes like this:\n    // If count is even, then \"royalblue\", else \"crimson\".\n  };\n  return (\n    <div className='widget-counter container'>\n      <h2>Counter</h2>\n      <div style={style}>Number {count} is even</div> {/* STEP 3  We need to replace some hard-coded info in the JSX with expressions, interpolated inside curly brackets.\n  Start by replacing the character \"0\" with {count}. The 'count' slice of state is the source of truth here.\n  Then, replace the word \"even\" with a ternary: {if count is even number, then string \"even\", else string \"odd\"}.*/}\n      <div>\n        <button onClick={increment}>Increment</button>\n        <button onClick={decrement}>Decrement</button>\n        <button onClick={reset}>Reset</button>\n      </div>\n    </div>\n  );\n}\n\n"},"lineCount":null}},"error":null,"hash":"cc7be6f90332c923c34b7bf26d9713e7","cacheData":{"env":{}}}